import { NextRequest, NextResponse } from 'next/server';
import { supabaseAdmin } from '../../../utils/supabase';

// –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π –∫—ç—à –¥–ª—è –ø–æ–ª–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
let configCache: {
  prompts: { [key: string]: string };
  openrouter_settings: { [key: string]: { model: string; settings: object } };
} = {
  prompts: {},
  openrouter_settings: {}
};
let lastConfigCacheUpdate = 0;
const CONFIG_CACHE_TTL = 5 * 60 * 1000; // 5 –º–∏–Ω—É—Ç

/**
 * –û—á–∏—Å—Ç–∫–∞ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–≥–æ –∫—ç—à–∞
 */
export function clearConfigCache() {
  configCache = {
    prompts: {},
    openrouter_settings: {}
  };
  lastConfigCacheUpdate = 0;
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º
 */
async function getFullConfig() {
  const now = Date.now();
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –∫—ç—à–∞
  if (now - lastConfigCacheUpdate < CONFIG_CACHE_TTL && 
      (Object.keys(configCache.prompts).length > 0 || Object.keys(configCache.openrouter_settings).length > 0)) {
    console.log('üì¶ [CONFIG CACHE] –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é');
    return configCache;
  }
  
  console.log('üîÑ [CONFIG CACHE] –û–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à –ø–æ–ª–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ –ë–î');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã —Å –∏—Ö –º–æ–¥–µ–ª—è–º–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ OpenRouter
    const { data, error } = await supabaseAdmin
      .from('ai_prompts')
      .select(`
        id,
        prompt_text,
        openrouter_model,
        ai_models!inner (
          id,
          name,
          character_id,
          is_active
        )
      `)
      .eq('is_active', true)
      .eq('ai_models.is_active', true);

    if (error) {
      console.error('‚ùå [CONFIG CACHE] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ –ë–î:', error);
      return configCache; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞—Ä—ã–π –∫—ç—à –ø—Ä–∏ –æ—à–∏–±–∫–µ
    }

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –∫—ç—à–∏
    const newPromptsCache: { [key: string]: string } = {};
    const newSettingsCache: { [key: string]: { model: string; settings: object } } = {};
    
    if (data) {
      data.forEach(prompt => {
        const model = Array.isArray(prompt.ai_models) ? prompt.ai_models[0] : prompt.ai_models;
        if (model) {
          // === –ü–†–û–ú–ü–¢–´ ===
          // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–º–ø—Ç –ø–æ ID –º–æ–¥–µ–ª–∏
          newPromptsCache[model.id] = prompt.prompt_text;
          // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–º–ø—Ç –ø–æ –∏–º–µ–Ω–∏ –º–æ–¥–µ–ª–∏ (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
          newPromptsCache[model.name] = prompt.prompt_text;
          newPromptsCache[model.name.toLowerCase()] = prompt.prompt_text;
          // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–º–ø—Ç –ø–æ character_id –µ—Å–ª–∏ –µ—Å—Ç—å
          if (model.character_id) {
            newPromptsCache[model.character_id] = prompt.prompt_text;
          }
          
          // === –ù–ê–°–¢–†–û–ô–ö–ò OPENROUTER ===
          const settings = {
            model: prompt.openrouter_model || 'mistralai/mistral-medium-3',
            settings: {
              temperature: 1.4,
              max_tokens: 800,
              top_p: 1,
              frequency_penalty: 0.7,
              presence_penalty: 0.7
            }
          };
          
          // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ ID –º–æ–¥–µ–ª–∏
          newSettingsCache[model.id] = settings;
          // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ –∏–º–µ–Ω–∏ –º–æ–¥–µ–ª–∏ (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
          newSettingsCache[model.name] = settings;
          newSettingsCache[model.name.toLowerCase()] = settings;
          // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ character_id –µ—Å–ª–∏ –µ—Å—Ç—å
          if (model.character_id) {
            newSettingsCache[model.character_id] = settings;
          }
        }
      });
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π –∫—ç—à
    configCache = {
      prompts: newPromptsCache,
      openrouter_settings: newSettingsCache
    };
    lastConfigCacheUpdate = now;
    
    console.log(`‚úÖ [CONFIG CACHE] –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π –∫—ç—à –æ–±–Ω–æ–≤–ª–µ–Ω. –ü—Ä–æ–º–ø—Ç–æ–≤: ${Object.keys(newPromptsCache).length}, –ù–∞—Å—Ç—Ä–æ–µ–∫: ${Object.keys(newSettingsCache).length}`);
    
    return configCache;
  } catch (error) {
    console.error('üí• [CONFIG CACHE] –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
    return configCache; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞—Ä—ã–π –∫—ç—à –ø—Ä–∏ –æ—à–∏–±–∫–µ
  }
}

/**
 * GET /api/main-app/config
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–æ–º–ø—Ç–æ–≤ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ OpenRouter –æ–¥–Ω–∏–º –∑–∞–ø—Ä–æ—Å–æ–º
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä refresh –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
 */
export async function GET(request: NextRequest) {
  try {
    const url = new URL(request.url);
    const refresh = url.searchParams.get('refresh') === 'true';
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω–æ
    if (refresh) {
      console.log('üîÑ [CONFIG API] –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—ç—à–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏');
      clearConfigCache();
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é (—Å –∫—ç—à–µ–º –∏–ª–∏ –±–µ–∑)
    const config = await getFullConfig();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∞–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    const response = {
      ...config,
      cache_info: {
        cached_at: new Date(lastConfigCacheUpdate).toISOString(),
        ttl_seconds: Math.round((CONFIG_CACHE_TTL - (Date.now() - lastConfigCacheUpdate)) / 1000),
        total_prompts: Object.keys(config.prompts).length,
        total_settings: Object.keys(config.openrouter_settings).length
      }
    };
    
    return NextResponse.json(response);
  } catch (error) {
    console.error('‚ùå [CONFIG API] –û—à–∏–±–∫–∞ –≤ GET /api/main-app/config:', error);
    return NextResponse.json(
      { 
        error: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏',
        prompts: {},
        openrouter_settings: {},
        cache_info: {
          cached_at: null,
          ttl_seconds: 0,
          total_prompts: 0,
          total_settings: 0
        }
      },
      { status: 500 }
    );
  }
}

/**
 * POST /api/main-app/config/refresh
 * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞–µ—Ç –∫—ç—à –ø–æ–ª–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
 */
export async function POST() {
  try {
    clearConfigCache();
    const config = await getFullConfig();
    
    return NextResponse.json({
      message: '–ö—ç—à –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω',
      total_prompts: Object.keys(config.prompts).length,
      total_settings: Object.keys(config.openrouter_settings).length,
      updated_at: new Date().toISOString()
    });
  } catch (error) {
    console.error('‚ùå [CONFIG API] –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—ç—à–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', error);
    return NextResponse.json(
      { error: '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—ç—à–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏' },
      { status: 500 }
    );
  }
} 